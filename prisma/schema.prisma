// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
  relationMode = "prisma"
}


model Example {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    posts     Post[]
    likes     Like[]
    comments  Comment[]
    saves     Save[]
    following Follow[] @relation("Follows")
    followers Follow[] @relation("Followed")
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Post {
    id        String    @id @default(cuid())
    content   String    // For the text content
    photo1    String?   // URL or path for the 1st photo
    photo2    String?   // URL or path for the 2nd photo
    photo3    String?   // URL or path for the 3rd photo
    photo4    String?   // URL or path for the 4th photo
    photo5    String?   // URL or path for the 5th photo
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    userId    String
    user      User      @relation(fields: [userId], references: [id])
    likes     Like[]
    comments  Comment[]
    saves     Save[]

    @@index([userId])
}


model Like {
    id        String    @id @default(cuid())
    userId    String
    postId    String
    user      User      @relation(fields: [userId], references: [id])
    post      Post      @relation(fields: [postId], references: [id])

    @@index([userId])
    @@index([postId])
}

model Comment {
    id        String    @id @default(cuid())
    content   String
    userId    String
    postId    String
    user      User      @relation(fields: [userId], references: [id])
    post      Post      @relation(fields: [postId], references: [id])

    @@index([postId])
    @@index([userId])
}

model Save {
    id        String    @id @default(cuid())
    userId    String
    postId    String
    user      User      @relation(fields: [userId], references: [id])
    post      Post      @relation(fields: [postId], references: [id])

    @@index([userId])
    @@index([postId])
}

model Follow {
    id          String    @id @default(cuid())
    followerId  String
    followingId String
    follower    User      @relation("Follows", fields: [followerId], references: [id])
    following   User      @relation("Followed", fields: [followingId], references: [id])

    @@index([followerId])
    @@index([followingId])
}


